steps:
  # Step 1: Build the Docker image and tag it as mastery-hive-cv-extractor
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA', '.']

  # Step 2: Push the Docker image to Google Container Registry (GCR)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA']

  # Step 3: Deploy the Docker image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - run
      - deploy
      - $_SERVICE_NAME
      - --image
      - gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA
      - --platform
      - managed
      - --region
      - $_REGION
      - --allow-unauthenticated
      - '--set-env-vars=APP_ENV=$_APP_ENV,PYTHON_ENV=$_PYTHON_ENV,AUTH_USER=$_AUTH_USER,AUTH_PASSWORD=$_AUTH_PASSWORD,GOOGLE_API_KEY=$_GOOGLE_API_KEY,DB_HOST=$_DB_HOST,DB_DATABASE=$_DB_DATABASE,DB_PASSWORD=$_DB_PASSWORD,DB_USER=$_DB_USER,DB_PORT=$_DB_PORT,STAGING_BUCKET=$_STAGING_BUCKET,AMQP=$_AMQP,AMQP_QUEUE=$_AMQP_QUEUE'
      - '--port'
      - '8080'
      - '--max-instances'
      - '1'
      - '--min-instances'
      - '0'
      - '--memory'
      - '2Gi'
      - '--labels'
      - 'env=$_APP_ENV,service=$_SERVICE_NAME'

# Define the images to cache, which will help with faster subsequent builds
images:
  - 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA'

# Optional: Timeout for the build (e.g., 20 minutes)
timeout: '1200s'

# Set the service account for the build
serviceAccount: "service-account-github@infrastructure-staging-418710.iam.gserviceaccount.com"

# Specify that logs should only be sent to Cloud Logging
options:
  logging: CLOUD_LOGGING_ONLY
